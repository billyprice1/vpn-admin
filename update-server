#!/bin/bash

# VPN-Admin -- A script base system for managing an OpenVPN system
#
# Copyright (C) 2018 by Matthew Dwight.
#
# This code released under version 3 of the GNU GPL; see COPYING and the
# LICENSE.GPL for this project for full licensing details.
#

# Script to OpenVPN server running locally.

# get system variables if needed
. ./vars

# make sure there is a Certificate Authority for this system.
ca_check

usage (){
    printf "
Usage: $0 configuration_name

Current server configurations files:
------------------------------------\n"
    if [ -d $SETUP_DIR/servers ] ; then
        if [ "$(ls -A $SETUP_DIR/servers/*.conf)" ]; then
            find $SETUP_DIR/servers/*.conf  -printf "%f\n"
        fi
    fi       

}

# STEP 1 - check if the right number of parameters were supplied.
if [ $# -lt 1 ];
    then
    usage
    exit 1
fi

# STEP 2 - Drop extension to certificate if supplied
CONFIG="${1//.conf}"

# STEP 3 - See if server config file exist
if [ ! -f ./servers/$CONFIG.conf ] ; then
    printf "Server Configuration file ./server/$CONFIG.conf does not exist!\n"
    printf "Update Failed.\n"
    exit 1
fi

# STEP 4 - See if we should stop all client and servers and clean out files.
if [ "$2"  == "CLEAN" ] ;
    then
        printf "Stopping all configurations and removing old config files from $SYSTEM_DIR/\n"
        sudo systemctl stop openvpn.service
        sleep 3
        sudo rm -f $SYSTEM_DIR/*.conf
        sudo rm -f $SYSTEM_DIR/ccd/*
        sudo rm -f $SYSTEM_DIR/ipp.txt
    else
        printf "Stopping configuration : $1\n"
        sudo systemctl stop openvpn@$1.service
fi

# STEP 5 - Copy over configuration and ccd files.
sudo cp ./servers/$CONFIG.conf $SYSTEM_DIR/
if [ ! -d "$SYSTEM_DIR/ccd/" ] ; then
    sudo mkdir "$SYSTEM_DIR/ccd/"
fi    
sudo cp ./ccd/*  $SYSTEM_DIR/ccd/
sudo cp ./easyrsa3/pki/crl.pem $SYSTEM_DIR/

# STEP 6 - Start OpenVPN server(s)
printf "Starting $CONFIG configuraiton.\n"
sudo systemctl start openvpn@$1.service
