#!/bin/bash

# VPN-Admin - A script base system for managing an OpenVPN system
#
# Copyright (C) 2018 by Matthew Dwight.
#
# This code released under version 3 of the GNU GPL; see COPYING and the
# LICENSE.GPL for this project for full licensing details.
#

# Local Server/Client Control

# get system variables if needed
. ./vars

# make sure there is a Certificate Authority for this system.
#ca_check

usage (){
    printf "
Usage: $0 stop|start|restart|status  [configuation-name]

Current system configurations files:
------------------------------------\n"

    if [ -d $SYSTEM_DIR ] ; then
        if [ "$(ls -A $SYSTEM_DIR/*.conf)" ]; then
            find $SYSTEM_DIR/*.conf  -printf "%f\n"
        fi
    fi       

}

# STEP 1 - check if the right number of parameters were supplied.
if [ $# -lt 1 ] ; then
    usage
    exit 1
fi

# Check if the right number of parameters were supplied.
if  [ "$1" == "" ] ; then
    printf "Usage: $0 stop|start|restart|status  [configuation-name]\n\n"
    printf "Current active configuration files:\n"
    cd $SYSTEM_DIR/
    ls -1 *.conf
    cd $SETUP_DIR
    exit 1
fi

# see if a configuration file extension provided.
if [ "$2" == "" ] ; 
    then

        if [ "$1" == "stop" ] ; then
            printf "sudo systemctl stop openvpn.service\n"
            sudo systemctl stop openvpn.service
            exit 0
        fi
    
        # Start all OpenVPN services.
        if [ "$1" == "start" ] ; then
            printf "sudo systemctl start openvpn.service\n"
            sudo systemctl start openvpn.service
            exit 0
        fi
    
        # Restart all OpenVPN services.
        if [ "$1" == "restart" ] ; then
            printf "sudo systemctl restart openvpn.service\n"
            sudo systemctl restart openvpn.service
            exit 0
        fi
    
        # Status of all OpenVPN services.
        if [ "$1" == "status" ] ; then
            printf "sudo systemctl status openvpn@*.service\n"
            systemctl --no-pager status openvpn@*.service
            exit 0
        fi

    else

        CONFIG="${2//.conf}"
    
        # Stop a specific OpenVPN service.
        if [ "$1" == "stop" ]  ; then
            printf "sudo systemctl stop openvpn@$CONFIG.service\n"
            sudo systemctl stop openvpn@$CONFIG.service
            exit 0
        fi
    
        # Start a specific OpenVPN service.
        if [ "$1" == "start" ]  ; then
            printf "sudo systemctl start openvpn@$CONFIG.service\n"
            sudo systemctl start openvpn@$CONFIG.service
            exit 0
        fi
    
        # Restart a specific OpenVPN service.
        if [ "$1" == "restart" ]  ; then
            printf "sudo systemctl restart openvpn@$CONFIG.service\n"
            sudo systemctl restart openvpn@$CONFIG.service
            exit 0
        fi
    
        # Status of a specific OpenVPN service.
        if [ "$1" == "status" ]  ; then
            printf "systemctl status openvpn@$CONFIG.service\n"
            systemctl --no-pager status openvpn@$CONFIG.service
            exit 0
        fi
fi
